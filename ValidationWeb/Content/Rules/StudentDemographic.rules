ruleset StudentDemographic

/* Race & AncestryEthnicOrigin rules */


/* American Indian - Alaskan Native (Minnesota) rules */
rule 10.1.1 
	when {StudentDemographic}.[EthnicCode] = 'American Indian - Alaskan Native (Minnesota)' then
	require {StudentDemographic}.[IndianIndicator] exists and {StudentDemographic}.[IndianIndicator] = 1
	else '425. When the student\'s EthnicCode is \'American Indian - Alaskan Native (Minnesota)\', the IndianIndicator must be set to true.'

rule 10.1.2 
	when {StudentDemographic}.[EthnicCode] = 'American Indian - Alaskan Native (Minnesota)' then
	expect count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-notindicated') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-cherokee') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-dakota') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-ojibwe') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-other') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-unknown') > 0
	else '424. Warning: You have a student with a federal race ethnicity code - American Indian - Alaskan Native (Minnesota)  - but without a corresponding state ancestry group. Is this correct?'

rule 10.1.3 
	when {StudentDemographic}.[EthnicCode] <> 'American Indian - Alaskan Native (Minnesota)' or {StudentDemographic}.[EthnicCode] does not exist then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-notindicated') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-cherokee') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-dakota') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-ojibwe') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-unknown') = 0
	else '425. When the student\'s EthnicCode is not \'American Indian - Alaskan Native (Minnesota)\', none of the corresponding values (\'ai-\') should be submitted for AncestryEthnicOrigin.'

rule 10.1.4 
	when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-notindicated' then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-cherokee') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-dakota') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-ojibwe') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'ai-unknown') = 0
	else '425. When an AncestryEthnicOrigin value of \'ai-notindicated\' is submitted, no other AncestryEthnicOrigins from that category (\'ai-\') may be submitted for that student.'


/* AsianIndicator rules */
rule 10.2.1 
	when {StudentDemographic}.[AsianIndicator] = 1 then
	expect count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-notindicated') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-burmese') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-chinese') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-filipino') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-hmong') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-indian') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-karen') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-korean') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-other') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-unknown') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-vietnamese') > 0
	else '424. Warning: You have a student with a federal race ethnicity code - Asian  - but without a corresponding state ancestry group. Is this correct?'

rule 10.2.2 
	when {StudentDemographic}.[AsianIndicator] <> 1 or {StudentDemographic}.[AsianIndicator] does not exist then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-notindicated') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-burmese') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-chinese') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-filipino') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-hmong') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-indian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-karen') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-korean') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-unknown') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-vietnamese') = 0
	else '425. When the student\'s AsianIndicator is not set to true, none of the corresponding values (\'as-\') should be submitted for AncestryEthnicOrigin.'

rule 10.2.3 
	when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-notindicated' then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-burmese') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-chinese') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-filipino') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-hmong') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-indian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-karen') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-korean') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-unknown') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'as-vietnamese') = 0
	else '425. When an AncestryEthnicOrigin value of \'as-notindicated\' is submitted, no other AncestryEthnicOrigins from that category (\'as-\') may be submitted for that student.'


/* BlackIndicator rules */
rule 10.3.1 
	when {StudentDemographic}.[BlackIndicator] = 1 then
	expect count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-notindicated') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-africanamerican') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-ethiopianoromo') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-ethiopianother') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-liberian') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-nigerian') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-other') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-somali') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-unknown') > 0
	else '424. Warning: You have a student with a federal race ethnicity code - Black - but without a corresponding state ancestry group. Is this correct?'

rule 10.3.2 
	when {StudentDemographic}.[BlackIndicator] <> 1 or {StudentDemographic}.[BlackIndicator] does not exist then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-notindicated') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-africanamerican') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-ethiopianoromo') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-ethiopianother') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-liberian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-nigerian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-somali') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-unknown') = 0
	else '425. When the student\'s BlackIndicator is not set to true, none of the corresponding values (\'bl-\') should be submitted for AncestryEthnicOrigin.'

rule 10.3.3 
	when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-notindicated' then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-africanamerican') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-ethiopianoromo') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-ethiopianother') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-liberian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-nigerian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-somali') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'bl-unknown') = 0
	else '424. When an AncestryEthnicOrigin value of \'bl-notindicated\' is submitted, no other AncestryEthnicOrigins from that category (\'bl-\') may be submitted for that student.'


/* HispanicIndicator rules*/
rule 10.4.1 
	when {StudentDemographic}.[HispanicIndicator] = 1 then
	expect count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-notindicated') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-colombian') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-ecuadorian') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-guatemalan') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-mexican') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-other') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-puertorican') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-salvadoran') > 0
	or count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-spanish') > 0
	else '424. Warning: You have a student with a federal race ethnicity code - Hispanic - but without a corresponding state ancestry group. Is this correct?'
	
rule 10.4.2 
	when {StudentDemographic}.[HispanicIndicator] <> 1 then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-notindicated') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-colombian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-ecuadorian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-guatemalan') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-mexican') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-puertorican') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-salvadoran') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-spanish') = 0
	else '425. When the student\'s HispanicIndicator is not set to true, none of the corresponding values (\'hl-\') should be submitted for AncestryEthnicOrigin.'

rule 10.4.3 
	when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-notindicated' then
	require count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-colombian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-ecuadorian') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-guatemalan') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-mexican') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-other') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-puertorican') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-salvadoran') = 0
	and count({StudentDemographic} when {StudentDemographic}.[AncestryEthnicOrigin] = 'hl-spanish') = 0
	else '425. When an AncestryEthnicOrigin value of \'hl-notindicated\' is submitted, no other AncestryEthnicOrigins from that category (\'hl-\') may be submitted for that student.'

rule 10.4.4
	require {StudentDemographic}.[HispanicIndicator] exists
	else '425. A value of either true or false must be provided for the student\'s HispanicIndicator.'


/*Pre-existing MARSS Rules*/

rule 10.10.6140
	require that {StudentDemographic}.[BirthDate] exists
	else '6. The field given contains an invalid value as defined in the MARSS Manual.  Note:  Fields are edited only if they are required in that reporting cycle (fall or end-of-year).'
	
rule 10.10.6141
	require that {StudentDemographic}.[BirthDate] < {StudentEnrollment}.[StatusBeginDate]
	else '199. The student\'s birth date is equal to or greater than the date of enrollment. Check the student\'s birth date.'
	
rule 10.10.6143
	require that {StudentDemographic}.[Gender] is in ['Male','Female']
	else '6. The field given contains an invalid value as defined in the MARSS Manual.  Note:  Fields are edited only if they are required in that reporting cycle (fall or end-of-year).'
	
rule 10.10.6148
	require that {StudentDemographic}.[FirstName] exists
	and {StudentDemographic}.[LastName] exists
	else '6. The field given contains an invalid value as defined in the MARSS Manual.  Note:  Fields are edited only if they are required in that reporting cycle (fall or end-of-year).'
	
rule 10.10.6179
	require that count({StudentDemographic}) = count({StudentDemographic} by [BirthDate])
	else '132. The student\'s birthdate as well as the student\'s gender must match on all records within the district.'
	
rule 10.10.6180
	require that count({StudentDemographic}) = count({StudentDemographic} by [Gender])
	else '132. The student\'s birthdate as well as the student\'s gender must match on all records within the district.'
	
rule 10.10.6241
	when {StudentDemographic}.[EnglishLearnerServed] = 1 then
	require that {StudentDemographic}.[HomePrimaryLanguage] is not in ['11','42']
	else '48. A student who has been identified by a Home Language of English (011) or American Sign Language (042) cannot be identified as an English Learner.  Also check the student\'s Home Language.'
	
rule 10.10.6269
	when {StudentDemographic}.[HispanicIndicator] = 1 then
	require that {StudentDemographic}.[IndianIndicator] exists
	or {StudentDemographic}.[AsianIndicator] exists
	or {StudentDemographic}.[BlackIndicator] exists
	or {StudentDemographic}.[PacificIslanderIndicator] exists
	or {StudentDemographic}.[WhiteIndicator] exists
	else '312. When Hispanic/Latino is flagged as Y, at least one race indicator is required.'
	
rule 10.10.6297
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [HomePrimaryLanguage])
	else '281. Home Language must match on all records within the district.  PS records and SAC 46 records are excluded from this error.'
	
rule 10.10.6298
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [EthnicCode])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6323
	when {StudentDemographic}.[MiddleName] exists then
	require StartsWithInvalidChar({StudentDemographic}.[MiddleName]) = 0
	else '201. The student name must begin with a character. Spaces, numbers, or other non-alpha characters are invalid. Only valid non-alpha characters are an apostrophe (\') and a dash (-).'
	
rule 10.10.6341
	when {StudentDemographic}.[EthnicCode] = 'American Indian - Alaskan Native (Minnesota)' then
	expect {StudentDemographic}.[IndianIndicator] exists and {StudentDemographic}.[IndianIndicator] = 1
	else '367. The North American Indian code is set to 1 but the Federal American Indian race/ethnic indicator is set to N.'
	
rule 10.10.6399
	require ContainsInvalidChar({StudentDemographic}.[LastName]) = 0
	else '297. Invalid character in student last, first, middle name field only valid characters are letters, dash and apostrophe, or invalid character in suffix field only valid characters are letters, dash, apostrophe or numbers.'
	
rule 10.10.6402
	require that {StudentDemographic}.[HispanicIndicator] = 1
	or {StudentDemographic}.[IndianIndicator] exists
	or {StudentDemographic}.[AsianIndicator] exists
	or {StudentDemographic}.[BlackIndicator] exists
	or {StudentDemographic}.[PacificIslanderIndicator] exists
	or {StudentDemographic}.[WhiteIndicator] exists
	else '302. The six race/ethnic indicators are all set to N. At least one race/ethic indicator must be set to Y.'

rule 10.10.6403
	require ContainsInvalidChar({StudentDemographic}.[FirstName]) = 0
	else '297. Invalid character in student last, first, middle name field only valid characters are letters, dash and apostrophe, or invalid character in suffix field only valid characters are letters, dash, apostrophe or numbers.'
	
rule 10.10.6404
	when {StudentDemographic}.[MiddleName] exists then
	require ContainsInvalidChar({StudentDemographic}.[MiddleName]) = 0
	else '297. Invalid character in student last, first, middle name field only valid characters are letters, dash and apostrophe, or invalid character in suffix field only valid characters are letters, dash, apostrophe or numbers.'
	
rule 10.10.6405
	when {StudentDemographic}.[Suffix] exists then
	require ContainsInvalidChar({StudentDemographic}.[Suffix]) = 0
	else '297. Invalid character in student last, first, middle name field only valid characters are letters, dash and apostrophe, or invalid character in suffix field only valid characters are letters, dash, apostrophe or numbers.'
	
rule 10.10.6418
	require that StartsWithInvalidChar({StudentDemographic}.[Firstname]) = 0
	else '201. The student name must begin with a character. Spaces, numbers, or other non-alpha characters are invalid. Only valid non-alpha characters are an apostrophe (\') and a dash (-).'
	
rule 10.10.6419
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [HispanicIndicator])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6420
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [IndianIndicator])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6421
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [AsianIndicator])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6422
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [BlackIndicator])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6423
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [PacificIslanderIndicator])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6424
	when {StudentEnrollment}.[StudentGradeLevel] <> 'PS' then
	require that count({StudentDemographic}) = count({StudentDemographic} by [WhiteIndicator])
	else '280. Race/Ethnicity must match on all records within the district. PS records are excluded from this error.'
	
rule 10.10.6430
	require ContainsDoubleSpace({StudentDemographic}.[LastName]) = 0
	else '310. Students with multiple-part last, first or middle names should not have double spaces between the name parts. Confirm that the name is a multiple-part name and if so, correct the name by only having a single space between the multiple parts.'
	
rule 10.10.6431
	require ContainsDoubleSpace({StudentDemographic}.[FirstName]) = 0
	else '310. Students with multiple-part last, first or middle names should not have double spaces between the name parts. Confirm that the name is a multiple-part name and if so, correct the name by only having a single space between the multiple parts.'
	
rule 10.10.6432
	when {StudentDemographic}.[MiddleName] exists then
	require ContainsDoubleSpace({StudentDemographic}.[MiddleName]) = 0
	else '310. Students with multiple-part last, first or middle names should not have double spaces between the name parts. Confirm that the name is a multiple-part name and if so, correct the name by only having a single space between the multiple parts.'
	
rule 10.10.6596
	when {StudentEnrollment}.[StudentGradeLevel] = 'PS' then
	require that years since {StudentDemographic}.[BirthDate] as of {StudentEnrollment}.[StatusBeginDate] >= 3
	and years since {StudentDemographic}.[BirthDate] as of {StudentEnrollment}.[StatusBeginDate] <= 6
	else '258. Age at time of preschool screening must be greater than or equal to 3 and less than 7.'
	
rule 10.10.6599
	require that StartsWithInvalidChar({StudentDemographic}.[LastName]) = 0
	else '201. The student name must begin with a character. Spaces, numbers, or other non-alpha characters are invalid. Only valid non-alpha characters are an apostrophe (\') and a dash (-).'

rule 10.10.6600
	expect ShortString({StudentDemographic}.[LastName]) = 0
	else '202. The student\'s last name should have more than 1 character.'
	
rule 10.10.6601
	when {StudentEnrollment}.[StudentGradeLevel] is not in ['PS','EC','PA','PB','PC','PD','PE','PF','PG','PH','PI','PJ','RA','RB','RC','RD','RE','RF','RG','RH','RI','RJ'] then
	require years since {StudentDemographic}.[BirthDate] as of 1-September > 3
	else '231. This error indicates the student\'s September 1 age is 3 or less, but the student is not enrolled as grade EC (Early Childhood). Check the student\'s grade or date of birth.'
